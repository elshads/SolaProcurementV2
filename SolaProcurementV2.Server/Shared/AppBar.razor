
<MudAppBar>
    <MudIconButton Icon="@Icons.Material.Filled.Menu" Color="Color.Inherit" Edge="Edge.Start" OnClick="@MenuClickHandler" />
    <MudSpacer />
    <MudButton Color="Color.Inherit" Class="mx-3" Style="border-radius:50px;" OnClick="@(() => NavigationManager.NavigateTo("/userprofile"))">
        <MudAvatar Image="@Avatar"></MudAvatar>
        <MudText Class="px-2">@SessionData.SessionUser.FullName</MudText>
    </MudButton>
    <form method="post" action="Identity/Account/LogOut">
        <MudTooltip Text="Log out" Duration="500">
            <MudIconButton Icon="@Icons.Material.Filled.Logout" Color="Color.Inherit" ButtonType="MudBlazor.ButtonType.Submit"></MudIconButton>
        </MudTooltip>
    </form>
</MudAppBar>

@code {
    [Parameter] public bool Open { get; set; }
    [Parameter] public EventCallback<bool> OpenChanged { get; set; }
    [Parameter] public bool IsNotificationOn { get; set; } = false;
    [Parameter] public string Avatar { get; set; } = "/img/avatar.png";


    protected override void OnParametersSet()
    {
        Avatar = (SessionData.SessionUser.Photo != null ? string.Format($"data:image/png;base64," + Convert.ToBase64String(SessionData.SessionUser.Photo)) : "/img/avatar.png");
    }

    async Task MenuClickHandler()
    {
        Open = !Open;
        await OpenChanged.InvokeAsync(Open);
    }
}

<style>
    .img-size {
        max-height: 2.5rem;
        max-width: 2.5rem;
    }

    .flex-box {
        display: flex;
        align-items: center;
    }
</style>